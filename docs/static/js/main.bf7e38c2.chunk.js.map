{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifAround.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","GifAround","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OACQ,qBAAKC,UAAU,cAAf,SACI,sBAAMC,SAbG,SAACC,GAClBA,EAAEC,iBAEEL,EAAWM,OAAOC,OAAS,IAE3BT,GAAe,SAAAU,GAAI,OAAKR,GAAL,mBAAmBQ,OACtCP,EAAc,KAElBQ,QAAQC,IAAI,sBAKJ,SACI,uBACAC,KAAK,OACLC,MAAOZ,EACPa,SAlBU,SAACT,GAAD,OAAOH,EAAcG,EAAEU,OAAOF,QAmBxCG,YAAY,mB,+BCzBnBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1CV,QAAQC,IAAK,cAZM,kBAaZe,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OAFAV,QAAQC,IAAI,qBAGR,sBAAKR,UAAU,2CAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAK+B,IAAKd,EAAKe,IAAKL,EAAOD,GAAIA,MAEnC,qBAAK1B,UAAU,aAAf,SACK2B,QCPJM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECFd,SAAEA,GAAe,IAAD,EAEblB,mBAAS,CAC/ByB,KAAM,GACNY,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAqBvC,OAdAC,qBAAU,WAENvB,EAASC,GACRuB,MAAM,SAAAC,GAEHH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAKlB,CAACnB,IAEGoB,EDjByBK,CAAazB,GAAhCa,EAFwB,EAE7BN,KAAaY,EAFgB,EAEhBA,QAErB,OACI,qCACI,qBAAKlC,UAAU,kDAAf,SACI,6BAAMe,MAGTmB,GAAW,mBAAGlC,UAAU,UAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAGQ4B,EAAOJ,KAAK,SAAEC,GAAF,OACR,cAAC,EAAD,eAEQA,GADIA,EAAIC,aEjB3Be,EAAY,WAAO,IAAD,EAGS5C,mBAAS,CAAC,WAHnB,mBAGpB6C,EAHoB,KAGR9C,EAHQ,KAM3B,OACI,sBAAKI,UAAU,iBAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,gBAAf,iBACA,qBAAKA,UAAU,mBAAf,uBAEJ,uBACA,cAAC,EAAD,CAAaJ,cAAeA,IAC5B,qBAAMI,UAAU,iBAAhB,SAGY0C,EAAWlB,KAAM,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MChBrC4B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.bf7e38c2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => setInputValue(e.target.value);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2) {\r\n            \r\n            setCategories( cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n        console.log('Hecho-AddCategory');\r\n    }\r\n\r\n    return (\r\n            <div className=\"form-addCat\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Buscar...\"\r\n                    />\r\n                </form>\r\n            </div>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes= {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async ( category ) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=12&api_key=PdK4CKWSVWLfwL1WvoS3HNh44BWpjtb5`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map ( img => {\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    console.log ('Hecho-gifs');\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url} ) => {\r\n    \r\n    console.log('Hecho-GifGridItem');\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__zoomInUp\" >\r\n            <div className=\"card-gif\">\r\n                <img src={url} alt={title} id={id}/>\r\n            </div>\r\n            <div className=\"card-title\">\r\n                {title}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGif } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const { data:images, loading} = useFetchGif( category );\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cat-title animate__animated animate__zoomInDown\">\r\n                <h3>{ category }</h3>\r\n            </div>\r\n\r\n            {loading && <p className=\"loading\">Loading...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map( ( img ) => (\r\n                        <GifGridItem\r\n                            key = { img.id }    \r\n                            {...img }\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGif = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( category )\r\n        .then (imgs => {\r\n\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n            \r\n        })\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifAround = () => { \r\n    \r\n    \r\n    const [categories, setCategories] = useState(['Search'])\r\n\r\n\r\n    return (\r\n        <div className=\"app-cointainer\">\r\n            <div className=\"logo\">\r\n                <div className=\"app-title-GIF\">GIF</div>\r\n                <div className=\"app-title-Around\">Around</div>\r\n            </div>\r\n            <hr />\r\n            <AddCategory setCategories={setCategories} />\r\n            <div  className=\"grid-container\">\r\n\r\n                    {\r\n                        categories.map ( category => (\r\n                            <GifGrid \r\n                                key={category}\r\n                                category={category}/>\r\n                        ))\r\n                    }\r\n\r\n            </div>\r\n\r\n\r\n            \r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//Components\nimport { GifAround } from './GifAround';\n//Styles\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifAround />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}